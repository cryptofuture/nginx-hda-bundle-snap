#
# Copyright (C) Dmitry Volyntsev
# Copyright (C) NGINX, Inc.
#

proc njs_test {body} {
    spawn  -nottycopy njs
    expect "interactive njscript\r
\r
v.<Tab> -> the properties and prototype methods of v.\r
type console.help() for more information\r
\r
>> "

    set len [llength $body]
    for {set i 0} {$i < $len} {incr i} {
        set pair [lindex $body $i]
        send [lindex $pair 0]
        expect [lindex $pair 1]
    }

    # Ctrl-C
    send \x03
    expect eof
}

# simple multi line interation
njs_test {
    {"var a = 1\r\n"
     "var a = 1\r\nundefined\r\n>> "}
    {"a *= 2\r\n"
     "a *= 2\r\n2\r\n>> "}
}

# Global completions, no
njs_test {
    {"\t\tn"
     "\a\r\nDisplay all*possibilities? (y or n)*>> "}
}

# Global completions, yes
njs_test {
    {"\t\ty"
     "\a\r\nDisplay all*possibilities? (y or n)*abstract"}
}

# Global completions, single partial match
njs_test {
    {"O\t"
     "O\abject"}
}

njs_test {
    {"Ma\t"
     "Ma\ath"}
}

njs_test {
    {"conso\t"
     "conso\ale"}
}

# Global completions, multiple partial match
njs_test {
    {"cons\t\t"
     "console*console.help*console.log*const"}
}

njs_test {
    {"O\t"
     "O\abject"}
    {".\t\t"
     "Object.create*Object.isSealed"}
}

njs_test {
    {"Object.\t\t"
     "Object.create*Object.isSealed"}
}

njs_test {
    {"Object.g\t"
     "Object.g\aet"}
    {"\t"
     "Object.getOwnPropertyDescriptor*Object.getPrototypeOf"}
}

njs_test {
    {"Ma\t"
     "Ma\ath"}
    {".\t\t"
     "Math.__proto__*Math.cbrt*Math.fround*Math.log2"}
}

# Global completions, no matches
njs_test {
    {"1.\t\t"
     "1."}
}

njs_test {
    {"1..\t\t"
     "1.."}
}

njs_test {
    {"'abc'.\t\t"
     "'abc'."}
}

# Global completions, global vars
njs_test {
    {"var a = 1; var aa = 2\r\n"
     "var a = 1; var aa = 2\r\nundefined\r\n>> "}
    {"a\t\t"
     "a*aa*abstract"}
}

njs_test {
    {"var zz = 1\r\n"
     "var zz = 1\r\nundefined\r\n>> "}
    {"1 + z\t\r\n"
     "1 + zz\r\n2"}
}

njs_test {
    {"unknown_var\t\t"
     "unknown_var"}
}

njs_test {
    {"unknown_var.\t\t"
     "unknown_var."}
}

# An object's level completions
njs_test {
    {"var o = {zz:1, zb:2}\r\n"
     "var o = {zz:1, zb:2}\r\nundefined\r\n>> "}
    {"o.z\t\t"
     "o.zb*o.zz"}
}

njs_test {
    {"var d = new Date()\r\n"
     "var d = new Date()\r\nundefined\r\n>> "}
    {"d.to\t\t"
     "d.toDateString*d.toLocaleDateString*d.toString"}
}

njs_test {
    {"var o = {a:new Date()}\r\n"
     "var o = {a:new Date()}\r\nundefined\r\n>> "}
    {"o.a.to\t\t"
     "o.a.toDateString*o.a.toLocaleDateString*o.a.toString"}
}

# console object
njs_test {
    {"console.log()\r\n"
     "console.log()\r\n\r\nundefined\r\n>> "}
    {"console.log(1)\r\n"
     "console.log(1)\r\n1\r\nundefined\r\n>> "}
    {"console.log('abc')\r\n"
     "console.log('abc')\r\nabc\r\nundefined\r\n>> "}
    {"console.help()\r\n"
     "console.help()\r\nVM built-in objects:"}
}

# Exception in njs_vm_retval()
njs_test {
    {"var o = { toString: function() { return [1] } }\r\n"
     "undefined\r\n>> "}
    {"o\r\n"
     "TypeError"}
}

# Backtraces are reset between invocations
njs_test {
    {"JSON.parse(Error())\r\n"
     "JSON.parse(Error())\r\nSyntaxError: Unexpected token at position 0*at JSON.parse (native)"}
    {"JSON.parse(Error()\r\n"
     "JSON.parse(Error()\r\nSyntaxError: Unexpected token \"\" in 1"}
}

# require('fs')

set file [open njs_test_file w]
puts -nonewline $file "αβZγ"
flush $file

exec /bin/echo -ne {\x80\x80} > njs_test_file_non_utf8

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.read\t"
     "fs.read\aFile"}
}

# require('fs').readFile()

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFile('njs_test_file', 'utf8', function (e, data) {console.log(data[2]+data.length)})\r\n"
     "Z4\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFile('njs_test_file', function (e, data) {console.log(data[4]+data.length)})\r\n"
     "Z7\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFile('njs_test_file', {encoding:'utf8',flag:'r+'}, function (e, data) {console.log(data)})\r\n"
     "αβZγ\r\nundefined\r\n>> "}
}

exec rm -fr njs_unknown_path

njs_test {
    {"var fs = require('fs'); \r\n"
     "undefined\r\n>> "}
    {"fs.readFile('njs_unknown_path', 'utf8', function (e) {console.log(JSON.stringify(e))})\r\n"
     "{\"errno\":2,\"path\":\"njs_unknown_path\",\"syscall\":\"open\"}\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs'); \r\n"
     "undefined\r\n>> "}
    {"fs.readFile('njs_unknown_path', {encoding:'utf8', flag:'r+'}, function (e) {console.log(e)})\r\n"
     "Error: No such file or directory\r\nundefined\r\n>> "}
}

# require('fs').readFileSync()

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file', 'utf8')[2]\r\n"
     "Z\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file')[4]\r\n"
     "Z\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file', {encoding:'utf8',flag:'r+'})\r\n"
     "αβZγ\r\n>> "}
}

njs_test {
    {"var fs = require('fs'); \r\n"
     "undefined\r\n>> "}
    {"try { fs.readFileSync('njs_unknown_path')} catch (e) {console.log(JSON.stringify(e))}\r\n"
     "{\"errno\":2,\"path\":\"njs_unknown_path\",\"syscall\":\"open\"}\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file_non_utf8').charCodeAt(1)\r\n"
     "128"}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file_non_utf8', 'utf8')\r\n"
     "Error: Non-UTF8 file, convertion is not implemented"}
}


# require('fs').writeFile()

exec rm -fr njs_test_file2

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"function h1(e) {if (e) {throw e}; console.log(fs.readFileSync('njs_test_file2'))}\r\n"
     "undefined\r\n>> "}
    {"fs.writeFile('njs_test_file2', 'ABC', h1)\r\n"
     "ABC\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFile('njs_test_file2', 'ABC', 'utf8', function (e) { if (e) {throw e}; console.log(fs.readFileSync('njs_test_file2'))})\r\n"
     "ABC\r\nundefined\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFile('njs_test_file2', 'ABC', {encoding:'utf8', mode:0o666}, function (e) { if (e) {throw e}; console.log(fs.readFileSync('njs_test_file2'))})\r\n"
     "ABC\r\nundefined\r\n>> "}
}

exec rm -fr njs_wo_file

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFile('njs_wo_file', 'ABC', {mode:0o222}, function (e) {console.log(fs.readFileSync('njs_wo_file'))})\r\n"
     "Error: Permission denied"}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFile('/invalid_path', 'ABC', function (e) { console.log(JSON.stringify(e))})\r\n"
     "{\"errno\":13,\"path\":\"/invalid_path\",\"syscall\":\"open\"}\r\nundefined\r\n>> "}
}

# require('fs').writeFileSync()

exec rm -fr njs_test_file2

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_test_file2', 'ABC')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file2')\r\n"
     "ABC\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_test_file2', 'ABC', 'utf8')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file2')\r\n"
     "ABC\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_test_file2', 'ABC')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_test_file2', 'ABC')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file2')\r\n"
     "ABC\r\n>> "}
}

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_test_file2', 'ABC', {encoding:'utf8', mode:0o666})\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file2')\r\n"
     "ABC\r\n>> "}
}

exec rm -fr njs_wo_file

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.writeFileSync('njs_wo_file', 'ABC', {mode:0o222}); fs.readFileSync('njs_wo_file')\r\n"
     "Error: Permission denied"}
}

# require('fs').appendFile()

exec rm -fr njs_test_file2

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"function h1(e) {console.log(fs.readFileSync('njs_test_file2'))}\r\n"
     "undefined\r\n>> "}
    {"function h2(e) {fs.appendFile('njs_test_file2', 'ABC', h1)}\r\n"
     "undefined\r\n>> "}
    {"fs.appendFile('njs_test_file2', 'ABC', h2)\r\n"
     "ABCABC\r\nundefined\r\n>> "}
}

# require('fs').appendFileSync()

exec rm -fr njs_test_file2

njs_test {
    {"var fs = require('fs')\r\n"
     "undefined\r\n>> "}
    {"fs.appendFileSync('njs_test_file2', 'ABC')\r\n"
     "undefined\r\n>> "}
    {"fs.appendFileSync('njs_test_file2', 'ABC')\r\n"
     "undefined\r\n>> "}
    {"fs.readFileSync('njs_test_file2')\r\n"
     "ABCABC\r\n>> "}
}
